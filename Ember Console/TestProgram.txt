// Access modifiers
// public
// private
// internal
// external
// shared = protected

// Class modifiers
// unique = static
// template = abstract
// final = sealed

public template class Entity
{
    public double Health <>;
    public string Name
    {
        <|;
        private |>;
        [char in] |> in<string>;
    }
}

public final class List<T>
{
    public int FindIndex([T] <| bool match)
    {
        for (var item in items)
        {
            if (match(item))
                return iteration;
        }
        
        return -1;
    }
}

var list = new List<string>
{
    "hello",
    "world"
};

var index = list.FindIndex([item] <| item == "hello");

[TParameter] <| TResult lambda = [parameter] <| expression;
[TParameter] <| TResult lambda = [parameter] <|
{
    return expression;
}

[TParameter] |> lambda = [parameter] |> statement;
[TParameter] |> lambda = [parameter] |>
{
    statement;
}

[] <| TResult lambda = [] <| expression;
[] <| TResult lambda = [] <|
{
    return expression;
}

[] |> lambda = [] |> statement;
[] |> lambda = [] |>
{
    statement;
}